(()=>{"use strict";var e={365:(e,n,t)=>{t.d(n,{A:()=>c});var a=t(354),o=t.n(a),r=t(314),i=t.n(r)()(o());i.push([e.id,"body{\n    height: 100vh;\n    width: 100vw;\n    margin: 0;\n    display: flex;\n}\n.side-bar{\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n    width: 15%;\n    padding:0 1rem;\n    background-color: antiquewhite;\n}\n\n.profile{\n    margin-top: 1rem;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n}\n\n.profile-image{\n    margin-left: 1rem;\n    background-color: black;\n    border-radius: 16px;\n    width: 30px;\n    height: 30px;\n}\n\n.profile-name{\n    margin-left: 0.5rem ;\n}\n\n.project-list{\n    padding: 1rem;\n}\n\n.project-list-header{\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n}\n\n.project-list-header > img {\n    width: 1.5rem;\n    height: 1.5rem;\n    display: flex;\n    border: 0;\n}\n\n.project-list-title{\n    display: flex;\n    margin: 0;\n}\n\n.project-name{\n    margin-top: 0.5rem;\n    margin-left: 0.5rem;\n}\n\n.project-name::before{\n    content: '#';\n    color: aqua;\n}\n\n.add-task{\n    display: flex;\n    align-items: center;\n    background: none;\n    border: none;\n    padding: 0 0 0 1rem;\n    cursor: pointer;\n}\n\n.add-task > img{\n    width: 1.5rem;\n    height: 1.5rem;\n    margin-right: 0.5rem;\n}\n\n.content{\n    width: 85%;\n    display: flex;\n    flex-direction: column;   \n}\n\n.project-title{\n    padding-left: 3rem;\n    display: flex;\n    width: 50%;\n    justify-content: center;\n}\n\n.task-container{\n    padding: 0 3.5rem 6rem 3.5rem;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n}\n\n.tasks{\n    width: 50%;\n    display: flex;\n    margin: 0 0 0.5rem;\n    border-bottom: 1px solid black;\n    padding: 0.5rem;\n}\n\n.task-content{\n    position: relative;\n    margin-left: 0.5rem;\n    width: 100%;\n}\n\n.task-title{\n    margin: 0 0 0.5rem;\n}\n\n.desc-text{\n    margin: 0 0 0.5rem 1rem;\n}\n\n.edit-btn, .edit-btn > img, .drop, .drop > img{\n    cursor: pointer;\n    background: none;\n    border: 0;\n    padding: 0;\n    display: flex;\n    width: 1.5rem;\n    height: 1.5rem;\n}\n\n.btn-div{\n    display: flex;\n    position: absolute;\n    top: 0;\n    right: 0;\n    gap: 0.5rem;\n\n}\n\n.edit-btn:hover, .drop:hover{\n    background-color: rgb(194, 191, 191);\n}","",{version:3,sources:["webpack://./src/styles.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,YAAY;IACZ,SAAS;IACT,aAAa;AACjB;AACA;IACI,aAAa;IACb,sBAAsB;IACtB,YAAY;IACZ,UAAU;IACV,cAAc;IACd,8BAA8B;AAClC;;AAEA;IACI,gBAAgB;IAChB,aAAa;IACb,mBAAmB;IACnB,mBAAmB;AACvB;;AAEA;IACI,iBAAiB;IACjB,uBAAuB;IACvB,mBAAmB;IACnB,WAAW;IACX,YAAY;AAChB;;AAEA;IACI,oBAAoB;AACxB;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,8BAA8B;AAClC;;AAEA;IACI,aAAa;IACb,cAAc;IACd,aAAa;IACb,SAAS;AACb;;AAEA;IACI,aAAa;IACb,SAAS;AACb;;AAEA;IACI,kBAAkB;IAClB,mBAAmB;AACvB;;AAEA;IACI,YAAY;IACZ,WAAW;AACf;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,gBAAgB;IAChB,YAAY;IACZ,mBAAmB;IACnB,eAAe;AACnB;;AAEA;IACI,aAAa;IACb,cAAc;IACd,oBAAoB;AACxB;;AAEA;IACI,UAAU;IACV,aAAa;IACb,sBAAsB;AAC1B;;AAEA;IACI,kBAAkB;IAClB,aAAa;IACb,UAAU;IACV,uBAAuB;AAC3B;;AAEA;IACI,6BAA6B;IAC7B,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,sBAAsB;AAC1B;;AAEA;IACI,UAAU;IACV,aAAa;IACb,kBAAkB;IAClB,8BAA8B;IAC9B,eAAe;AACnB;;AAEA;IACI,kBAAkB;IAClB,mBAAmB;IACnB,WAAW;AACf;;AAEA;IACI,kBAAkB;AACtB;;AAEA;IACI,uBAAuB;AAC3B;;AAEA;IACI,eAAe;IACf,gBAAgB;IAChB,SAAS;IACT,UAAU;IACV,aAAa;IACb,aAAa;IACb,cAAc;AAClB;;AAEA;IACI,aAAa;IACb,kBAAkB;IAClB,MAAM;IACN,QAAQ;IACR,WAAW;;AAEf;;AAEA;IACI,oCAAoC;AACxC",sourcesContent:["body{\n    height: 100vh;\n    width: 100vw;\n    margin: 0;\n    display: flex;\n}\n.side-bar{\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n    width: 15%;\n    padding:0 1rem;\n    background-color: antiquewhite;\n}\n\n.profile{\n    margin-top: 1rem;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n}\n\n.profile-image{\n    margin-left: 1rem;\n    background-color: black;\n    border-radius: 16px;\n    width: 30px;\n    height: 30px;\n}\n\n.profile-name{\n    margin-left: 0.5rem ;\n}\n\n.project-list{\n    padding: 1rem;\n}\n\n.project-list-header{\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n}\n\n.project-list-header > img {\n    width: 1.5rem;\n    height: 1.5rem;\n    display: flex;\n    border: 0;\n}\n\n.project-list-title{\n    display: flex;\n    margin: 0;\n}\n\n.project-name{\n    margin-top: 0.5rem;\n    margin-left: 0.5rem;\n}\n\n.project-name::before{\n    content: '#';\n    color: aqua;\n}\n\n.add-task{\n    display: flex;\n    align-items: center;\n    background: none;\n    border: none;\n    padding: 0 0 0 1rem;\n    cursor: pointer;\n}\n\n.add-task > img{\n    width: 1.5rem;\n    height: 1.5rem;\n    margin-right: 0.5rem;\n}\n\n.content{\n    width: 85%;\n    display: flex;\n    flex-direction: column;   \n}\n\n.project-title{\n    padding-left: 3rem;\n    display: flex;\n    width: 50%;\n    justify-content: center;\n}\n\n.task-container{\n    padding: 0 3.5rem 6rem 3.5rem;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n}\n\n.tasks{\n    width: 50%;\n    display: flex;\n    margin: 0 0 0.5rem;\n    border-bottom: 1px solid black;\n    padding: 0.5rem;\n}\n\n.task-content{\n    position: relative;\n    margin-left: 0.5rem;\n    width: 100%;\n}\n\n.task-title{\n    margin: 0 0 0.5rem;\n}\n\n.desc-text{\n    margin: 0 0 0.5rem 1rem;\n}\n\n.edit-btn, .edit-btn > img, .drop, .drop > img{\n    cursor: pointer;\n    background: none;\n    border: 0;\n    padding: 0;\n    display: flex;\n    width: 1.5rem;\n    height: 1.5rem;\n}\n\n.btn-div{\n    display: flex;\n    position: absolute;\n    top: 0;\n    right: 0;\n    gap: 0.5rem;\n\n}\n\n.edit-btn:hover, .drop:hover{\n    background-color: rgb(194, 191, 191);\n}"],sourceRoot:""}]);const c=i},314:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",a=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),a&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),a&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,a,o,r){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(a)for(var c=0;c<this.length;c++){var s=this[c][0];null!=s&&(i[s]=!0)}for(var d=0;d<e.length;d++){var l=[].concat(e[d]);a&&i[l[0]]||(void 0!==r&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=r),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),n.push(l))}},n}},354:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var a=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(a),r="/*# ".concat(o," */");return[n].concat([r]).join("\n")}return[n].join("\n")}},72:e=>{var n=[];function t(e){for(var t=-1,a=0;a<n.length;a++)if(n[a].identifier===e){t=a;break}return t}function a(e,a){for(var r={},i=[],c=0;c<e.length;c++){var s=e[c],d=a.base?s[0]+a.base:s[0],l=r[d]||0,A="".concat(d," ").concat(l);r[d]=l+1;var p=t(A),m={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==p)n[p].references++,n[p].updater(m);else{var u=o(m,a);a.byIndex=c,n.splice(c,0,{identifier:A,updater:u,references:1})}i.push(A)}return i}function o(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,o){var r=a(e=e||[],o=o||{});return function(e){e=e||[];for(var i=0;i<r.length;i++){var c=t(r[i]);n[c].references--}for(var s=a(e,o),d=0;d<r.length;d++){var l=t(r[d]);0===n[l].references&&(n[l].updater(),n.splice(l,1))}r=s}}},659:e=>{var n={};e.exports=function(e,t){var a=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(t)}},540:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},56:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},825:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var a="";t.supports&&(a+="@supports (".concat(t.supports,") {")),t.media&&(a+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(a+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),a+=t.css,o&&(a+="}"),t.media&&(a+="}"),t.supports&&(a+="}");var r=t.sourceMap;r&&"undefined"!=typeof btoa&&(a+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),n.styleTagTransform(a,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},113:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}}},n={};function t(a){var o=n[a];if(void 0!==o)return o.exports;var r=n[a]={id:a,exports:{}};return e[a](r,r.exports,t),r.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var a in n)t.o(n,a)&&!t.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:n[a]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),(()=>{var e;t.g.importScripts&&(e=t.g.location+"");var n=t.g.document;if(!e&&n&&(n.currentScript&&(e=n.currentScript.src),!e)){var a=n.getElementsByTagName("script");if(a.length)for(var o=a.length-1;o>-1&&(!e||!/^http(s?):/.test(e));)e=a[o--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e})(),t.nc=void 0;const a=t.p+"50ad363ee2c819f382d2.svg";class o{constructor(e,n,t,a,o){this.title=e,this.desc=n,this.dueDate=t,this.priority=a,this.isComplete=!1}changeTitle(e){this.title=e}changeDesc(e){this.desc=e}changeIsComplete(){this.isComplete=!this.isComplete}changePriority(e){this.priority=e}}class r{constructor(e){this.name=e,this.tasks=[]}newTodo(e,n,t,a,r){let i=new o(e,n,t,a,r);return this.tasks.push(i),i}get getTasks(){return this.tasks}get getProjName(){return this.name}}const i=new class{constructor(){this.projects=[]}newProject(e){let n=new r(e);return this.projects.push(n),n}get getProjects(){return this.projects}};i.newProject("test project"),i.newProject("empty project"),i.projects[0].newTodo("Test title","this is a test","07-12-24","high"),i.projects[0].newTodo("Test 2","Test 2 description","07-13-24","high"),i.projects[0].tasks[0].changePriority("low"),console.log(i.projects[0].getTasks),console.log(i.getProjects);const c=t.p+"68f20ae6dfdf65f68d7c.svg",s=t.p+"3ea4cf483224d228ffe4.svg",d=t.p+"ab52c97c10b42dc6ad54.svg";function l(e){const n=document.querySelector("body"),t=document.createElement("div");t.classList.add("content");const a=document.createElement("divs");a.classList.add("content-header");const o=document.createElement("button");o.classList.add("header-button");const r=document.createElement("span");r.classList.add("header-text"),r.textContent="My Projects",o.appendChild(r),a.appendChild(o);const c=document.createElement("div");c.classList.add("project-title");const A=document.createElement("h1"),p=i.projects.filter((n=>n.name===e));A.textContent=e,c.appendChild(A);const m=document.createElement("div");m.classList.add("task-container"),p.forEach((n=>{n.tasks.forEach((n=>{console.log(n);const t=document.createElement("div");t.classList.add("tasks");const a=document.createElement("div");a.classList.add("checkbox-div");const o=document.createElement("input");o.setAttribute("type","checkbox"),a.appendChild(o);const r=document.createElement("div");r.classList.add("task-content");const c=document.createElement("h3");c.classList.add("task-title"),c.textContent=n.title;const A=document.createElement("span");A.classList.add("due-date"),A.textContent=n.dueDate;const p=document.createElement("div");p.classList.add("description");const u=document.createElement("div");u.classList.add("btn-div");const h=document.createElement("button");h.classList.add("drop");const C=new Image;C.src=d,h.appendChild(C);const f=document.createElement("button");f.classList.add("edit-btn");const g=new Image;g.src=s,f.addEventListener("click",(function(){!function(e,n){const t=document.querySelector("body"),a=document.createElement("dialog"),o=document.createElement("form"),r=i.projects.findIndex((e=>e.name===n)),c=i.projects[r].tasks.findIndex((n=>n.title===e.title));console.log(i.projects[r].tasks.findIndex((n=>n.title===e.title))),console.log(i.projects.findIndex((e=>e.name===n))),console.log(e);const s=document.createElement("div"),d=document.createElement("input");d.type="text",d.name="taskName",d.value=e.title,s.appendChild(d);const A=document.createElement("div"),p=document.createElement("input");p.type="text",p.name="taskDescription",p.value=e.desc,A.appendChild(p);const m=document.createElement("div"),u=document.createElement("input");u.type="date",u.name="dueDate",m.appendChild(u);const h=document.createElement("div"),C=document.createElement("select");["Low","Medium","High"].forEach((function(e){const n=document.createElement("option");n.textContent=e,n.value=e.toLowerCase().replace(/\s/g,"-"),C.appendChild(n)})),h.appendChild(C);const f=document.createElement("div"),g=document.createElement("button");g.type="submit",g.value="Submit",g.textContent="Save";const v=document.createElement("button");v.value="Cancel",v.textContent="Cancel",g.addEventListener("click",(()=>{event.preventDefault(),a.close(),i.projects[r].tasks[c].changeTitle(o.taskName.value),i.projects[r].tasks[c].changeDesc(o.taskDescription.value);let e=C.options[C.selectedIndex];i.projects[r].tasks[c].changePriority(e.value),console.log(i.projects[r].tasks[c]);const t=document.querySelector(".content");null!==t&&t.remove(),l(n)})),v.addEventListener("click",(()=>{event.preventDefault(),a.close()})),f.appendChild(g),f.appendChild(v),o.appendChild(s),o.appendChild(A),o.appendChild(m),o.appendChild(h),o.appendChild(f),a.appendChild(o),t.appendChild(a),a.showModal()}(n,e)})),f.appendChild(g),u.appendChild(f),u.appendChild(h),C.addEventListener("click",(()=>{if(p.hasChildNodes())for(;p.hasChildNodes();)p.removeChild(p.firstChild);else{const e=document.createElement("p");e.classList.add("desc-text"),e.textContent=n.desc,p.appendChild(e),r.insertBefore(p,A)}})),r.appendChild(c),r.appendChild(A),r.appendChild(u),t.appendChild(a),t.appendChild(r),m.appendChild(t)}))})),t.appendChild(a),t.appendChild(c),t.appendChild(m),n.appendChild(t)}var A=t(72),p=t.n(A),m=t(825),u=t.n(m),h=t(659),C=t.n(h),f=t(56),g=t.n(f),v=t(540),I=t.n(v),b=t(113),B=t.n(b),y=t(365),x={};x.styleTagTransform=B(),x.setAttributes=g(),x.insert=C().bind(null,"head"),x.domAPI=u(),x.insertStyleElement=I(),p()(y.A,x),y.A&&y.A.locals&&y.A.locals,function(){const e=document.querySelector("body"),n=document.createElement("div");n.classList.add("side-bar");const t=document.createElement("div");t.classList.add("profile");const o=document.createElement("div");o.classList.add("profile-image");const r=document.createElement("img");o.appendChild(r);const s=document.createElement("p");s.textContent="Tododo",s.classList.add("profile-name"),t.appendChild(o),t.appendChild(s);const d=document.createElement("div");d.classList.add("project-list");const A=document.createElement("div");A.classList.add("project-list-header");const p=document.createElement("h3");p.textContent="My Projects",p.classList.add("project-list-title");const m=new Image;m.src=a,A.appendChild(p),A.appendChild(m);const u=document.createElement("div");i.getProjects.forEach((e=>{const n=document.createElement("button");n.classList.add("project-button");const t=document.createElement("p");t.classList.add("project-name"),t.textContent=e.getProjName,n.addEventListener("click",(function(){const e=document.querySelector(".content");null!==e&&e.remove(),l(t.textContent)})),n.appendChild(t),u.appendChild(n)})),d.appendChild(A),d.appendChild(u);const h=document.createElement("button");h.classList.add("add-task");const C=new Image;C.src=c;const f=document.createElement("span");f.textContent="Add Task",h.appendChild(C),h.appendChild(f),n.appendChild(t),n.appendChild(d),n.appendChild(h),e.appendChild(n)}()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,