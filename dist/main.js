(()=>{"use strict";var e={365:(e,n,t)=>{t.d(n,{A:()=>i});var o=t(354),a=t.n(o),r=t(314),d=t.n(r)()(a());d.push([e.id,"body{\n    height: 100vh;\n    width: 100vw;\n    margin: 0;\n    display: flex;\n}\n.side-bar{\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n    width: 15%;\n    padding:0 1rem;\n    background-color: antiquewhite;\n}\n\n.profile{\n    margin-top: 1rem;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n}\n\n.profile-image{\n    margin-left: 1rem;\n    background-color: black;\n    border-radius: 16px;\n    width: 30px;\n    height: 30px;\n}\n\n.profile-name{\n    margin-left: 0.5rem ;\n}\n\n.project-list{\n    padding: 1rem;\n}\n\n.project-list-header{\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n}\n\n.project-list-header > img {\n    width: 1.5rem;\n    height: 1.5rem;\n    display: flex;\n    border: 0;\n}\n\n.project-list-title{\n    display: flex;\n    margin: 0;\n}\n\n.projects{\n    display: flex;\n    flex-direction: column;\n}\n\n.project-button{\n    width: fit-content;\n    border: 0;\n    background: none;\n    cursor: pointer;\n}\n\n.project-name{\n    margin-top: 0.5rem;\n    margin-left: 0.5rem;\n}\n\n.project-name::before{\n    content: '#';\n    color: aqua;\n}\n\n.add-task{\n    display: flex;\n    align-items: center;\n    background: none;\n    border: none;\n    padding: 0 0 0 1rem;\n    cursor: pointer;\n}\n\n.add-task > img{\n    width: 1.5rem;\n    height: 1.5rem;\n    margin-right: 0.5rem;\n}\n\n.content{\n    width: 85%;\n    display: flex;\n    flex-direction: column;   \n}\n\n.project-title{\n    padding-left: 3rem;\n    display: flex;\n    width: 50%;\n    justify-content: center;\n}\n\n.task-container{\n    padding: 0 3.5rem 6rem 3.5rem;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n}\n\n.tasks{\n    width: 50%;\n    display: flex;\n    margin: 0 0 0.5rem;\n    border-bottom: 1px solid black;\n    padding: 0.5rem;\n}\n\n.task-content{\n    position: relative;\n    margin-left: 0.5rem;\n    width: 100%;\n}\n\n.task-title{\n    margin: 0 0 0.5rem;\n}\n\n.desc-text{\n    margin: 0 0 0.5rem 1rem;\n}\n\n.edit-btn, .edit-btn > img, .drop, .drop > img, .delete-btn{\n    cursor: pointer;\n    background: none;\n    border: 0;\n    padding: 0;\n    display: flex;\n    width: 1.5rem;\n    height: 1.5rem;\n}\n\n.btn-div{\n    display: flex;\n    position: absolute;\n    top: 0;\n    right: 0;\n    gap: 0.5rem;\n}\n\n.add-button{\n    display: flex;\n    align-items: center;\n    gap: 0.5rem;\n    background: none;\n    border: none;\n    cursor: pointer;\n}\n\n.add-button > img {\n    display: flex;\n    width: 1.5rem;\n    height: 1.5rem;\n}\n\n.edit-btn:hover, .drop:hover, .delete-btn:hover{\n    background-color: #f0f0f0f0;\n}\n\n.input-control{\n    display: flex;\n    flex-direction: column;\n}\n\n.input-control.success input {\n    border-color: #09c372;\n}\n\n.input-control.error input {\n    border-color: #ff3860;\n}\n\n","",{version:3,sources:["webpack://./src/styles.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,YAAY;IACZ,SAAS;IACT,aAAa;AACjB;AACA;IACI,aAAa;IACb,sBAAsB;IACtB,YAAY;IACZ,UAAU;IACV,cAAc;IACd,8BAA8B;AAClC;;AAEA;IACI,gBAAgB;IAChB,aAAa;IACb,mBAAmB;IACnB,mBAAmB;AACvB;;AAEA;IACI,iBAAiB;IACjB,uBAAuB;IACvB,mBAAmB;IACnB,WAAW;IACX,YAAY;AAChB;;AAEA;IACI,oBAAoB;AACxB;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,8BAA8B;AAClC;;AAEA;IACI,aAAa;IACb,cAAc;IACd,aAAa;IACb,SAAS;AACb;;AAEA;IACI,aAAa;IACb,SAAS;AACb;;AAEA;IACI,aAAa;IACb,sBAAsB;AAC1B;;AAEA;IACI,kBAAkB;IAClB,SAAS;IACT,gBAAgB;IAChB,eAAe;AACnB;;AAEA;IACI,kBAAkB;IAClB,mBAAmB;AACvB;;AAEA;IACI,YAAY;IACZ,WAAW;AACf;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,gBAAgB;IAChB,YAAY;IACZ,mBAAmB;IACnB,eAAe;AACnB;;AAEA;IACI,aAAa;IACb,cAAc;IACd,oBAAoB;AACxB;;AAEA;IACI,UAAU;IACV,aAAa;IACb,sBAAsB;AAC1B;;AAEA;IACI,kBAAkB;IAClB,aAAa;IACb,UAAU;IACV,uBAAuB;AAC3B;;AAEA;IACI,6BAA6B;IAC7B,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,sBAAsB;AAC1B;;AAEA;IACI,UAAU;IACV,aAAa;IACb,kBAAkB;IAClB,8BAA8B;IAC9B,eAAe;AACnB;;AAEA;IACI,kBAAkB;IAClB,mBAAmB;IACnB,WAAW;AACf;;AAEA;IACI,kBAAkB;AACtB;;AAEA;IACI,uBAAuB;AAC3B;;AAEA;IACI,eAAe;IACf,gBAAgB;IAChB,SAAS;IACT,UAAU;IACV,aAAa;IACb,aAAa;IACb,cAAc;AAClB;;AAEA;IACI,aAAa;IACb,kBAAkB;IAClB,MAAM;IACN,QAAQ;IACR,WAAW;AACf;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,WAAW;IACX,gBAAgB;IAChB,YAAY;IACZ,eAAe;AACnB;;AAEA;IACI,aAAa;IACb,aAAa;IACb,cAAc;AAClB;;AAEA;IACI,2BAA2B;AAC/B;;AAEA;IACI,aAAa;IACb,sBAAsB;AAC1B;;AAEA;IACI,qBAAqB;AACzB;;AAEA;IACI,qBAAqB;AACzB",sourcesContent:["body{\n    height: 100vh;\n    width: 100vw;\n    margin: 0;\n    display: flex;\n}\n.side-bar{\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n    width: 15%;\n    padding:0 1rem;\n    background-color: antiquewhite;\n}\n\n.profile{\n    margin-top: 1rem;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n}\n\n.profile-image{\n    margin-left: 1rem;\n    background-color: black;\n    border-radius: 16px;\n    width: 30px;\n    height: 30px;\n}\n\n.profile-name{\n    margin-left: 0.5rem ;\n}\n\n.project-list{\n    padding: 1rem;\n}\n\n.project-list-header{\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n}\n\n.project-list-header > img {\n    width: 1.5rem;\n    height: 1.5rem;\n    display: flex;\n    border: 0;\n}\n\n.project-list-title{\n    display: flex;\n    margin: 0;\n}\n\n.projects{\n    display: flex;\n    flex-direction: column;\n}\n\n.project-button{\n    width: fit-content;\n    border: 0;\n    background: none;\n    cursor: pointer;\n}\n\n.project-name{\n    margin-top: 0.5rem;\n    margin-left: 0.5rem;\n}\n\n.project-name::before{\n    content: '#';\n    color: aqua;\n}\n\n.add-task{\n    display: flex;\n    align-items: center;\n    background: none;\n    border: none;\n    padding: 0 0 0 1rem;\n    cursor: pointer;\n}\n\n.add-task > img{\n    width: 1.5rem;\n    height: 1.5rem;\n    margin-right: 0.5rem;\n}\n\n.content{\n    width: 85%;\n    display: flex;\n    flex-direction: column;   \n}\n\n.project-title{\n    padding-left: 3rem;\n    display: flex;\n    width: 50%;\n    justify-content: center;\n}\n\n.task-container{\n    padding: 0 3.5rem 6rem 3.5rem;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n}\n\n.tasks{\n    width: 50%;\n    display: flex;\n    margin: 0 0 0.5rem;\n    border-bottom: 1px solid black;\n    padding: 0.5rem;\n}\n\n.task-content{\n    position: relative;\n    margin-left: 0.5rem;\n    width: 100%;\n}\n\n.task-title{\n    margin: 0 0 0.5rem;\n}\n\n.desc-text{\n    margin: 0 0 0.5rem 1rem;\n}\n\n.edit-btn, .edit-btn > img, .drop, .drop > img, .delete-btn{\n    cursor: pointer;\n    background: none;\n    border: 0;\n    padding: 0;\n    display: flex;\n    width: 1.5rem;\n    height: 1.5rem;\n}\n\n.btn-div{\n    display: flex;\n    position: absolute;\n    top: 0;\n    right: 0;\n    gap: 0.5rem;\n}\n\n.add-button{\n    display: flex;\n    align-items: center;\n    gap: 0.5rem;\n    background: none;\n    border: none;\n    cursor: pointer;\n}\n\n.add-button > img {\n    display: flex;\n    width: 1.5rem;\n    height: 1.5rem;\n}\n\n.edit-btn:hover, .drop:hover, .delete-btn:hover{\n    background-color: #f0f0f0f0;\n}\n\n.input-control{\n    display: flex;\n    flex-direction: column;\n}\n\n.input-control.success input {\n    border-color: #09c372;\n}\n\n.input-control.error input {\n    border-color: #ff3860;\n}\n\n"],sourceRoot:""}]);const i=d},314:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",o=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),o&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),o&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,o,a,r){"string"==typeof e&&(e=[[null,e,void 0]]);var d={};if(o)for(var i=0;i<this.length;i++){var c=this[i][0];null!=c&&(d[c]=!0)}for(var s=0;s<e.length;s++){var l=[].concat(e[s]);o&&d[l[0]]||(void 0!==r&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=r),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),a&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=a):l[4]="".concat(a)),n.push(l))}},n}},354:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),r="/*# ".concat(a," */");return[n].concat([r]).join("\n")}return[n].join("\n")}},72:e=>{var n=[];function t(e){for(var t=-1,o=0;o<n.length;o++)if(n[o].identifier===e){t=o;break}return t}function o(e,o){for(var r={},d=[],i=0;i<e.length;i++){var c=e[i],s=o.base?c[0]+o.base:c[0],l=r[s]||0,A="".concat(s," ").concat(l);r[s]=l+1;var p=t(A),m={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==p)n[p].references++,n[p].updater(m);else{var u=a(m,o);o.byIndex=i,n.splice(i,0,{identifier:A,updater:u,references:1})}d.push(A)}return d}function a(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,a){var r=o(e=e||[],a=a||{});return function(e){e=e||[];for(var d=0;d<r.length;d++){var i=t(r[d]);n[i].references--}for(var c=o(e,a),s=0;s<r.length;s++){var l=t(r[s]);0===n[l].references&&(n[l].updater(),n.splice(l,1))}r=c}}},659:e=>{var n={};e.exports=function(e,t){var o=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},540:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},56:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},825:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var a=void 0!==t.layer;a&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,a&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var r=t.sourceMap;r&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),n.styleTagTransform(o,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},113:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}}},n={};function t(o){var a=n[o];if(void 0!==a)return a.exports;var r=n[o]={id:o,exports:{}};return e[o](r,r.exports,t),r.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var o in n)t.o(n,o)&&!t.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:n[o]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),(()=>{var e;t.g.importScripts&&(e=t.g.location+"");var n=t.g.document;if(!e&&n&&(n.currentScript&&(e=n.currentScript.src),!e)){var o=n.getElementsByTagName("script");if(o.length)for(var a=o.length-1;a>-1&&(!e||!/^http(s?):/.test(e));)e=o[a--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e})(),t.nc=void 0;const o=t.p+"50ad363ee2c819f382d2.svg";class a{constructor(e,n,t,o,a){this.title=e,this.desc=n,this.dueDate=t,this.priority=o,this.isComplete=!1}changeTitle(e){this.title=e}changeDesc(e){this.desc=e}changeIsComplete(){this.isComplete=!this.isComplete}changePriority(e){this.priority=e}changeDueDate(e){this.dueDate=e}}class r{constructor(e){this.name=e,this.tasks=[]}newTodo(e,n,t,o,r){let d=new a(e,n,t,o,r);return this.tasks.push(d),d}delTodo(e){const n=this.tasks.findIndex((n=>n.title===e));this.tasks.splice(n,1)}get getTasks(){return this.tasks}get getProjName(){return this.name}}const d=new class{constructor(){this.projects=[]}newProject(e){let n=new r(e);return this.projects.push(n),n}get getProjects(){return this.projects}};d.newProject("test project"),d.newProject("empty project"),d.projects[0].newTodo("Test title","this is a test","07-12-24","high"),d.projects[0].newTodo("Test 2","Test 2 description","07-13-24","high"),d.projects[0].tasks[0].changePriority("low"),console.log(d.projects[0].getTasks),console.log(d.getProjects);const i=t.p+"68f20ae6dfdf65f68d7c.svg",c=t.p+"d24cc42357c20f1f3fe4.svg",s=t.p+"5e89d40db53267906de5.svg",l=t.p+"66d3958d6b48a544d1be.svg";function A(e){const n=document.querySelector("body"),t=document.createElement("div");t.classList.add("content");const o=document.createElement("divs");o.classList.add("content-header");const a=document.createElement("button");a.classList.add("header-button");const r=document.createElement("span");r.classList.add("header-text"),r.textContent="My Projects",a.appendChild(r),o.appendChild(a);const p=document.createElement("div");p.classList.add("project-title");const m=document.createElement("h1"),u=d.projects.filter((n=>n.name===e)),h=d.projects.findIndex((n=>n.name===e));m.textContent=e,p.appendChild(m);const C=document.createElement("div");C.classList.add("task-container"),u.forEach((n=>{n.tasks.forEach((n=>{console.log(n);const o=document.createElement("div");o.classList.add("tasks");const a=document.createElement("div");a.classList.add("checkbox-div");const r=document.createElement("input");r.setAttribute("type","checkbox"),a.appendChild(r);const i=document.createElement("div");i.classList.add("task-content");const p=document.createElement("h3");p.classList.add("task-title"),p.textContent=n.title;const m=document.createElement("span");m.classList.add("due-date"),m.textContent=n.dueDate;const u=document.createElement("div");u.classList.add("description");const f=document.createElement("div");f.classList.add("btn-div");const g=document.createElement("button");g.classList.add("drop");const b=new Image;b.src=s,g.appendChild(b);const I=document.createElement("button");I.classList.add("edit-btn");const v=new Image;v.src=c,I.appendChild(v);const B=document.createElement("button");B.classList.add("delete-btn");const E=new Image;E.src=l,B.appendChild(E),f.appendChild(I),f.appendChild(B),f.appendChild(g),I.addEventListener("click",(function(){!function(e,n){const t=document.querySelector("body"),o=document.createElement("dialog"),a=document.createElement("form"),r=d.projects.findIndex((e=>e.name===n)),i=d.projects[r].tasks.findIndex((n=>n.title===e.title));console.log(d.projects[r].tasks.findIndex((n=>n.title===e.title))),console.log(d.projects.findIndex((e=>e.name===n))),console.log(e);const c=document.createElement("div");c.classList.add("input-control");const s=document.createElement("input");s.type="text",s.name="taskName",s.value=e.title,s.required=!0;const l=document.createElement("div");l.classList.add("error"),c.appendChild(s),c.appendChild(l);const p=document.createElement("div");p.classList.add("input-control");const m=document.createElement("input");m.type="text",m.name="taskDescription",m.value=e.desc,m.required=!0;const u=document.createElement("div");u.classList.add("error"),p.appendChild(m),p.appendChild(u);const h=document.createElement("div");h.classList.add("input-control");const C=document.createElement("input");C.type="date",C.name="dueDate",C.required=!0;const f=document.createElement("div");f.classList.add("error"),h.appendChild(C),h.appendChild(f);const g=document.createElement("div"),b=document.createElement("select");["Low","Medium","High"].forEach((function(e){const n=document.createElement("option");n.textContent=e,n.value=e.toLowerCase().replace(/\s/g,"-"),b.appendChild(n)})),g.appendChild(b);const I=document.createElement("div"),v=document.createElement("button");v.type="submit",v.value="Submit",v.textContent="Save";const B=document.createElement("button");B.value="Cancel",B.textContent="Cancel",a.addEventListener("submit",(e=>{e.preventDefault(),d.projects[r].tasks[i].changeTitle(a.taskName.value),d.projects[r].tasks[i].changeDesc(a.taskDescription.value);let t=b.options[b.selectedIndex];d.projects[r].tasks[i].changePriority(t.value),d.projects[r].tasks[i].changeDueDate(a.dueDate.value),console.log(typeof C),console.log(d.projects[r].tasks[i]),o.close();const c=document.querySelector(".content");null!==c&&c.remove(),A(n)})),B.addEventListener("click",(()=>{event.preventDefault(),o.close()})),I.appendChild(v),I.appendChild(B),a.appendChild(c),a.appendChild(p),a.appendChild(h),a.appendChild(g),a.appendChild(I),o.appendChild(a),t.appendChild(o),o.showModal()}(n,e)})),b.addEventListener("click",(()=>{if(u.hasChildNodes())for(;u.hasChildNodes();)u.removeChild(u.firstChild);else{const e=document.createElement("p");e.classList.add("desc-text"),e.textContent=n.desc,u.appendChild(e),i.insertBefore(u,m)}})),B.addEventListener("click",(()=>{d.projects[h].delTodo(n.title),null!==t&&t.remove(),A(e)})),i.appendChild(p),i.appendChild(m),i.appendChild(f),o.appendChild(a),o.appendChild(i),C.appendChild(o)}))}));const f=document.createElement("button");f.classList.add("add-button");const g=new Image;g.src=i,f.appendChild(g);const b=document.createElement("span");b.textContent="Add task",f.appendChild(b),f.addEventListener("click",(()=>{!function(e){const n=document.querySelector(".task-container"),t=document.createElement("form"),o=document.createElement("div");o.classList.add("input-container");const a=document.createElement("input");a.type="text",a.name="taskName",a.placeholder="Task title",a.required=!0,o.appendChild(a);const r=document.createElement("div"),i=document.createElement("textarea");i.placeholder="Task description",i.cols="25",i.rows="4",r.appendChild(i);const c=document.createElement("div"),s=document.createElement("input");s.type="date",s.name="duedate",s.required=!0,c.appendChild(s);const l=document.createElement("div"),p=document.createElement("select");["Low","Medium","High"].forEach((function(e){const n=document.createElement("option");n.textContent=e,n.value=e.toLowerCase().replace(/\s/g,"-"),p.appendChild(n)})),l.appendChild(p);const m=document.createElement("div"),u=document.createElement("button");u.type="submit",u.value="Submit",u.textContent="Add";const h=document.createElement("button");h.value="cancel",h.textContent="Cancel",m.appendChild(h),m.appendChild(u),t.appendChild(o),t.appendChild(r),t.appendChild(c),t.appendChild(l),t.appendChild(m),n.appendChild(t),t.addEventListener("submit",(n=>{n.preventDefault(),d.projects[e].newTodo(a.value,i.value,s.value,p.value);const t=document.querySelector(".content");null!==t&&t.remove(),A(d.projects[e].getProjName)}))}(h)})),C.appendChild(f),t.appendChild(o),t.appendChild(p),t.appendChild(C),n.appendChild(t)}var p=t(72),m=t.n(p),u=t(825),h=t.n(u),C=t(659),f=t.n(C),g=t(56),b=t.n(g),I=t(540),v=t.n(I),B=t(113),E=t.n(B),x=t(365),y={};y.styleTagTransform=E(),y.setAttributes=b(),y.insert=f().bind(null,"head"),y.domAPI=h(),y.insertStyleElement=v(),m()(x.A,y),x.A&&x.A.locals&&x.A.locals,function(){const e=document.querySelector("body"),n=document.createElement("div");n.classList.add("side-bar");const t=document.createElement("div");t.classList.add("profile");const a=document.createElement("div");a.classList.add("profile-image");const r=document.createElement("img");a.appendChild(r);const c=document.createElement("p");c.textContent="Tododo",c.classList.add("profile-name"),t.appendChild(a),t.appendChild(c);const s=document.createElement("div");s.classList.add("project-list");const l=document.createElement("div");l.classList.add("project-list-header");const p=document.createElement("h3");p.textContent="My Projects",p.classList.add("project-list-title");const m=new Image;m.src=o,l.appendChild(p),l.appendChild(m);const u=document.createElement("div");u.classList.add("projects"),d.getProjects.forEach((e=>{const n=document.createElement("button");n.classList.add("project-button");const t=document.createElement("p");t.classList.add("project-name"),t.textContent=e.getProjName,n.addEventListener("click",(function(){const e=document.querySelector(".content");null!==e&&e.remove(),A(t.textContent)})),n.appendChild(t),u.appendChild(n)})),s.appendChild(l),s.appendChild(u);const h=document.createElement("button");h.classList.add("add-task");const C=new Image;C.src=i;const f=document.createElement("span");f.textContent="Add Task",h.appendChild(C),h.appendChild(f),n.appendChild(t),n.appendChild(s),n.appendChild(h),e.appendChild(n)}()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,