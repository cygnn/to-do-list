(()=>{"use strict";var e={365:(e,n,t)=>{t.d(n,{A:()=>d});var a=t(354),o=t.n(a),r=t(314),i=t.n(r)()(o());i.push([e.id,"*{\n    margin: 0;\n    padding: 0;\n}\nbody{\n    height: 100vh;\n    width: 100vw;\n    margin: 0;\n    display: flex;\n    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n}\n\ndialog{\n    display: flex;\n    flex-direction: column;\n    top: 50%;\n    left: 50%;\n    -webkit-transform: translateX(-50%) translateY(-50%);\n    -moz-transform: translateX(-50%) translateY(-50%);\n    -ms-transform: translateX(-50%) translateY(-50%);\n    transform: translateX(-50%) translateY(-50%);\n}\n.side-bar{\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n    width: 15%;\n    padding:0 1rem;\n    background-color: antiquewhite;\n}\n\n.profile{\n    margin-top: 1rem;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n}\n\n\n.profile-name{\n    margin-top: 0;\n    margin-left: 0.5rem ;\n    font-size: 2rem;\n    cursor: pointer;\n}\n\n.welcome{\n    margin-top: 1rem;\n    display: flex;\n    justify-content: center;\n}\n\n.project-list{\n    padding: 1rem;\n}\n\n.project-list-header{\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    margin-bottom: 0.5rem;\n}\n\n.project-list-header > img {\n    width: 1.5rem;\n    height: 1.5rem;\n    display: flex;\n    border: 0;\n}\n\n.project-list-title{\n    display: flex;\n    margin: 0;\n}\n\n.projects{\n    display: flex;\n    flex-direction: column;\n}\n\n.project-item{\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n}\n\n.project-button{\n    width: fit-content;\n    border: 0;\n    background: none;\n    cursor: pointer;\n}\n\n.project-name{\n    margin: 0.5rem 0 0.5rem 0.5rem;\n}\n\n.project-name::before{\n    content: '#';\n    color: aqua;\n}\n\n.add-task{\n    display: flex;\n    align-items: center;\n    background: none;\n    border: none;\n    padding: 0 0 0 1rem;\n    cursor: pointer;\n}\n\n.add-task > img{\n    width: 1.5rem;\n    height: 1.5rem;\n    margin-right: 0.5rem;\n}\n\n.content{\n    width: 85%;\n    display: flex;\n    flex-direction: column;   \n}\n\n.content-body{\n    padding: 1rem;\n    margin-left: 1rem;\n}\n\n.content-item{\n    margin-bottom: 1rem;\n}\n\n.content-header{\n    padding: 0.5rem 0 0 1rem;\n}\n\n.header-button{\n    background: none;\n    border: none;\n    cursor: pointer;\n    padding: 0.5rem;\n}\n\n.header-button:hover{\n    background-color: #f0f0f0f0;\n    border-radius: 0.3rem;\n}\n\n.project-title{\n    padding-left: 3rem;\n    display: flex;\n    width: 50%;\n    justify-content: center;\n}\n\n.task-container{\n    padding: 0 3.5rem 6rem 3.5rem;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n}\n\n.tasks{\n    width: 50%;\n    display: flex;\n    margin: 0 0 0.5rem;\n    border-bottom: 1px solid black;\n    padding: 0.5rem;\n}\n\n.checkbox-div{\n    display: flex;\n}\n\n.task-content{\n    position: relative;\n    margin-left: 0.5rem;\n    width: 100%;\n}\n\n.task-title{\n    margin: 0 0 0.5rem;\n}\n\n.description{\n    display: none;\n}\n\n.drop-open{\n    display: block;\n    animation: open 0.3s ease-in-out forwards;\n}\n\n@keyframes open {\n    0% {\n        transform: scaleY(0)\n    }\n    100% {\n        transform: scaleY(1);\n    }\n}\n\n.desc-text{\n    margin: 0 0 0.5rem 1rem;\n}\n\n.edit-btn, .edit-btn > img, .drop, .drop > img, .delete-btn{\n    cursor: pointer;\n    background: none;\n    border: 0;\n    padding: 0;\n    display: flex;\n    width: 1.5rem;\n    height: 1.5rem;\n}\n\n.btn-div{\n    display: flex;\n    position: absolute;\n    top: 0;\n    right: 0;\n    gap: 0.5rem;\n}\n\n.add-button{\n    display: flex;\n    align-items: center;\n    gap: 0.5rem;\n    background: none;\n    border: none;\n    cursor: pointer;\n}\n\n.add-button > img {\n    display: flex;\n    width: 1.5rem;\n    height: 1.5rem;\n}\n\n.edit-btn:hover, .drop:hover, .delete-btn:hover{\n    background-color: #f0f0f0f0;\n}\n\n.input-control{\n    display: flex;\n    flex-direction: column;\n}\n\n.input-control.success input {\n    border-color: #09c372;\n}\n\n.input-control.error input {\n    border-color: #ff3860;\n}\n\n.edit-modal{\n    width: 25%;\n    min-height: 25%;\n\n}\n\n.modal-form{\n    display: flex;\n    flex-direction: column;\n    height: auto;\n    width: 75%;\n    margin: 0 0 1rem 1rem;\n    gap: 0.5rem;\n}\n\n\n.edit{\n    margin: 1rem;\n}\n\n.add-form{\n    display: flex;\n    flex-direction: column;\n    gap: 0.5rem;\n    width: 50%;\n    border: 1px solid #a3a3a3;\n    padding: 0.5rem;\n}\n\n.add-form div{\n    width: 100%;\n}\n\n.add-form div * {\n    width: 100%;\n}\n\n.button-div{\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-end;\n    gap: 0.5rem;\n}\n\n.low{\n    border: 4px #008000 solid;\n}\n\n.medium{\n    border: 4px #ffff00 solid;\n}\n\n.high{\n    border: 4px #ff0000 solid;\n}\n\n.checked{\n    text-decoration: line-through;\n}","",{version:3,sources:["webpack://./src/styles.css"],names:[],mappings:"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",sourcesContent:["*{\n    margin: 0;\n    padding: 0;\n}\nbody{\n    height: 100vh;\n    width: 100vw;\n    margin: 0;\n    display: flex;\n    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n}\n\ndialog{\n    display: flex;\n    flex-direction: column;\n    top: 50%;\n    left: 50%;\n    -webkit-transform: translateX(-50%) translateY(-50%);\n    -moz-transform: translateX(-50%) translateY(-50%);\n    -ms-transform: translateX(-50%) translateY(-50%);\n    transform: translateX(-50%) translateY(-50%);\n}\n.side-bar{\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n    width: 15%;\n    padding:0 1rem;\n    background-color: antiquewhite;\n}\n\n.profile{\n    margin-top: 1rem;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n}\n\n\n.profile-name{\n    margin-top: 0;\n    margin-left: 0.5rem ;\n    font-size: 2rem;\n    cursor: pointer;\n}\n\n.welcome{\n    margin-top: 1rem;\n    display: flex;\n    justify-content: center;\n}\n\n.project-list{\n    padding: 1rem;\n}\n\n.project-list-header{\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    margin-bottom: 0.5rem;\n}\n\n.project-list-header > img {\n    width: 1.5rem;\n    height: 1.5rem;\n    display: flex;\n    border: 0;\n}\n\n.project-list-title{\n    display: flex;\n    margin: 0;\n}\n\n.projects{\n    display: flex;\n    flex-direction: column;\n}\n\n.project-item{\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n}\n\n.project-button{\n    width: fit-content;\n    border: 0;\n    background: none;\n    cursor: pointer;\n}\n\n.project-name{\n    margin: 0.5rem 0 0.5rem 0.5rem;\n}\n\n.project-name::before{\n    content: '#';\n    color: aqua;\n}\n\n.add-task{\n    display: flex;\n    align-items: center;\n    background: none;\n    border: none;\n    padding: 0 0 0 1rem;\n    cursor: pointer;\n}\n\n.add-task > img{\n    width: 1.5rem;\n    height: 1.5rem;\n    margin-right: 0.5rem;\n}\n\n.content{\n    width: 85%;\n    display: flex;\n    flex-direction: column;   \n}\n\n.content-body{\n    padding: 1rem;\n    margin-left: 1rem;\n}\n\n.content-item{\n    margin-bottom: 1rem;\n}\n\n.content-header{\n    padding: 0.5rem 0 0 1rem;\n}\n\n.header-button{\n    background: none;\n    border: none;\n    cursor: pointer;\n    padding: 0.5rem;\n}\n\n.header-button:hover{\n    background-color: #f0f0f0f0;\n    border-radius: 0.3rem;\n}\n\n.project-title{\n    padding-left: 3rem;\n    display: flex;\n    width: 50%;\n    justify-content: center;\n}\n\n.task-container{\n    padding: 0 3.5rem 6rem 3.5rem;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n}\n\n.tasks{\n    width: 50%;\n    display: flex;\n    margin: 0 0 0.5rem;\n    border-bottom: 1px solid black;\n    padding: 0.5rem;\n}\n\n.checkbox-div{\n    display: flex;\n}\n\n.task-content{\n    position: relative;\n    margin-left: 0.5rem;\n    width: 100%;\n}\n\n.task-title{\n    margin: 0 0 0.5rem;\n}\n\n.description{\n    display: none;\n}\n\n.drop-open{\n    display: block;\n    animation: open 0.3s ease-in-out forwards;\n}\n\n@keyframes open {\n    0% {\n        transform: scaleY(0)\n    }\n    100% {\n        transform: scaleY(1);\n    }\n}\n\n.desc-text{\n    margin: 0 0 0.5rem 1rem;\n}\n\n.edit-btn, .edit-btn > img, .drop, .drop > img, .delete-btn{\n    cursor: pointer;\n    background: none;\n    border: 0;\n    padding: 0;\n    display: flex;\n    width: 1.5rem;\n    height: 1.5rem;\n}\n\n.btn-div{\n    display: flex;\n    position: absolute;\n    top: 0;\n    right: 0;\n    gap: 0.5rem;\n}\n\n.add-button{\n    display: flex;\n    align-items: center;\n    gap: 0.5rem;\n    background: none;\n    border: none;\n    cursor: pointer;\n}\n\n.add-button > img {\n    display: flex;\n    width: 1.5rem;\n    height: 1.5rem;\n}\n\n.edit-btn:hover, .drop:hover, .delete-btn:hover{\n    background-color: #f0f0f0f0;\n}\n\n.input-control{\n    display: flex;\n    flex-direction: column;\n}\n\n.input-control.success input {\n    border-color: #09c372;\n}\n\n.input-control.error input {\n    border-color: #ff3860;\n}\n\n.edit-modal{\n    width: 25%;\n    min-height: 25%;\n\n}\n\n.modal-form{\n    display: flex;\n    flex-direction: column;\n    height: auto;\n    width: 75%;\n    margin: 0 0 1rem 1rem;\n    gap: 0.5rem;\n}\n\n\n.edit{\n    margin: 1rem;\n}\n\n.add-form{\n    display: flex;\n    flex-direction: column;\n    gap: 0.5rem;\n    width: 50%;\n    border: 1px solid #a3a3a3;\n    padding: 0.5rem;\n}\n\n.add-form div{\n    width: 100%;\n}\n\n.add-form div * {\n    width: 100%;\n}\n\n.button-div{\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-end;\n    gap: 0.5rem;\n}\n\n.low{\n    border: 4px #008000 solid;\n}\n\n.medium{\n    border: 4px #ffff00 solid;\n}\n\n.high{\n    border: 4px #ff0000 solid;\n}\n\n.checked{\n    text-decoration: line-through;\n}"],sourceRoot:""}]);const d=i},314:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",a=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),a&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),a&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,a,o,r){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(a)for(var d=0;d<this.length;d++){var s=this[d][0];null!=s&&(i[s]=!0)}for(var c=0;c<e.length;c++){var l=[].concat(e[c]);a&&i[l[0]]||(void 0!==r&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=r),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),n.push(l))}},n}},354:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var a=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(a),r="/*# ".concat(o," */");return[n].concat([r]).join("\n")}return[n].join("\n")}},72:e=>{var n=[];function t(e){for(var t=-1,a=0;a<n.length;a++)if(n[a].identifier===e){t=a;break}return t}function a(e,a){for(var r={},i=[],d=0;d<e.length;d++){var s=e[d],c=a.base?s[0]+a.base:s[0],l=r[c]||0,A="".concat(c," ").concat(l);r[c]=l+1;var m=t(A),u={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==m)n[m].references++,n[m].updater(u);else{var p=o(u,a);a.byIndex=d,n.splice(d,0,{identifier:A,updater:p,references:1})}i.push(A)}return i}function o(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,o){var r=a(e=e||[],o=o||{});return function(e){e=e||[];for(var i=0;i<r.length;i++){var d=t(r[i]);n[d].references--}for(var s=a(e,o),c=0;c<r.length;c++){var l=t(r[c]);0===n[l].references&&(n[l].updater(),n.splice(l,1))}r=s}}},659:e=>{var n={};e.exports=function(e,t){var a=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(t)}},540:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},56:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},825:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var a="";t.supports&&(a+="@supports (".concat(t.supports,") {")),t.media&&(a+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(a+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),a+=t.css,o&&(a+="}"),t.media&&(a+="}"),t.supports&&(a+="}");var r=t.sourceMap;r&&"undefined"!=typeof btoa&&(a+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),n.styleTagTransform(a,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},113:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}}},n={};function t(a){var o=n[a];if(void 0!==o)return o.exports;var r=n[a]={id:a,exports:{}};return e[a](r,r.exports,t),r.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var a in n)t.o(n,a)&&!t.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:n[a]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),(()=>{var e;t.g.importScripts&&(e=t.g.location+"");var n=t.g.document;if(!e&&n&&(n.currentScript&&(e=n.currentScript.src),!e)){var a=n.getElementsByTagName("script");if(a.length)for(var o=a.length-1;o>-1&&(!e||!/^http(s?):/.test(e));)e=a[o--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e})(),t.nc=void 0;class a{constructor(e,n,t,a,o){this.title=e,this.desc=n,this.dueDate=t,this.priority=a,this.isComplete=!1}changeTitle(e){this.title=e}changeDesc(e){this.desc=e}changeIsComplete(){this.isComplete=!this.isComplete}changePriority(e){this.priority=e}changeDueDate(e){this.dueDate=e}}class o{constructor(e){this.name=e,this.tasks=[]}newTodo(e,n,t,o,r){let i=new a(e,n,t,o,r);return this.tasks.push(i),i}delTodo(e){const n=this.tasks.findIndex((n=>n.title===e));this.tasks.splice(n,1)}get getTasks(){return this.tasks}get getProjName(){return this.name}}const r=new class{constructor(){this.projects=[]}newProject(e){let n=new o(e);return this.projects.push(n),n}deleteProject(e){const n=this.projects.findIndex((n=>n.name===e));this.projects.splice(n,1)}get getProjects(){return this.projects}},i=t.p+"d24cc42357c20f1f3fe4.svg",d=t.p+"5e89d40db53267906de5.svg",s=t.p+"66d3958d6b48a544d1be.svg";function c(e){let n=JSON.stringify(e);localStorage.setItem("myObj",n)}const l=t.p+"68f20ae6dfdf65f68d7c.svg",A={lessThanXSeconds:{one:"less than a second",other:"less than {{count}} seconds"},xSeconds:{one:"1 second",other:"{{count}} seconds"},halfAMinute:"half a minute",lessThanXMinutes:{one:"less than a minute",other:"less than {{count}} minutes"},xMinutes:{one:"1 minute",other:"{{count}} minutes"},aboutXHours:{one:"about 1 hour",other:"about {{count}} hours"},xHours:{one:"1 hour",other:"{{count}} hours"},xDays:{one:"1 day",other:"{{count}} days"},aboutXWeeks:{one:"about 1 week",other:"about {{count}} weeks"},xWeeks:{one:"1 week",other:"{{count}} weeks"},aboutXMonths:{one:"about 1 month",other:"about {{count}} months"},xMonths:{one:"1 month",other:"{{count}} months"},aboutXYears:{one:"about 1 year",other:"about {{count}} years"},xYears:{one:"1 year",other:"{{count}} years"},overXYears:{one:"over 1 year",other:"over {{count}} years"},almostXYears:{one:"almost 1 year",other:"almost {{count}} years"}};function m(e){return(n={})=>{const t=n.width?String(n.width):e.defaultWidth;return e.formats[t]||e.formats[e.defaultWidth]}}const u={date:m({formats:{full:"EEEE, MMMM do, y",long:"MMMM do, y",medium:"MMM d, y",short:"MM/dd/yyyy"},defaultWidth:"full"}),time:m({formats:{full:"h:mm:ss a zzzz",long:"h:mm:ss a z",medium:"h:mm:ss a",short:"h:mm a"},defaultWidth:"full"}),dateTime:m({formats:{full:"{{date}} 'at' {{time}}",long:"{{date}} 'at' {{time}}",medium:"{{date}}, {{time}}",short:"{{date}}, {{time}}"},defaultWidth:"full"})},p={lastWeek:"'last' eeee 'at' p",yesterday:"'yesterday at' p",today:"'today at' p",tomorrow:"'tomorrow at' p",nextWeek:"eeee 'at' p",other:"P"};function h(e){return(n,t)=>{let a;if("formatting"===(t?.context?String(t.context):"standalone")&&e.formattingValues){const n=e.defaultFormattingWidth||e.defaultWidth,o=t?.width?String(t.width):n;a=e.formattingValues[o]||e.formattingValues[n]}else{const n=e.defaultWidth,o=t?.width?String(t.width):e.defaultWidth;a=e.values[o]||e.values[n]}return a[e.argumentCallback?e.argumentCallback(n):n]}}const f={ordinalNumber:(e,n)=>{const t=Number(e),a=t%100;if(a>20||a<10)switch(a%10){case 1:return t+"st";case 2:return t+"nd";case 3:return t+"rd"}return t+"th"},era:h({values:{narrow:["B","A"],abbreviated:["BC","AD"],wide:["Before Christ","Anno Domini"]},defaultWidth:"wide"}),quarter:h({values:{narrow:["1","2","3","4"],abbreviated:["Q1","Q2","Q3","Q4"],wide:["1st quarter","2nd quarter","3rd quarter","4th quarter"]},defaultWidth:"wide",argumentCallback:e=>e-1}),month:h({values:{narrow:["J","F","M","A","M","J","J","A","S","O","N","D"],abbreviated:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],wide:["January","February","March","April","May","June","July","August","September","October","November","December"]},defaultWidth:"wide"}),day:h({values:{narrow:["S","M","T","W","T","F","S"],short:["Su","Mo","Tu","We","Th","Fr","Sa"],abbreviated:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],wide:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"]},defaultWidth:"wide"}),dayPeriod:h({values:{narrow:{am:"a",pm:"p",midnight:"mi",noon:"n",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"},abbreviated:{am:"AM",pm:"PM",midnight:"midnight",noon:"noon",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"},wide:{am:"a.m.",pm:"p.m.",midnight:"midnight",noon:"noon",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"}},defaultWidth:"wide",formattingValues:{narrow:{am:"a",pm:"p",midnight:"mi",noon:"n",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"},abbreviated:{am:"AM",pm:"PM",midnight:"midnight",noon:"noon",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"},wide:{am:"a.m.",pm:"p.m.",midnight:"midnight",noon:"noon",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"}},defaultFormattingWidth:"wide"})};function C(e){return(n,t={})=>{const a=t.width,o=a&&e.matchPatterns[a]||e.matchPatterns[e.defaultMatchWidth],r=n.match(o);if(!r)return null;const i=r[0],d=a&&e.parsePatterns[a]||e.parsePatterns[e.defaultParseWidth],s=Array.isArray(d)?function(e,n){for(let n=0;n<e.length;n++)if(e[n].test(i))return n}(d):function(e,n){for(const n in e)if(Object.prototype.hasOwnProperty.call(e,n)&&e[n].test(i))return n}(d);let c;return c=e.valueCallback?e.valueCallback(s):s,c=t.valueCallback?t.valueCallback(c):c,{value:c,rest:n.slice(i.length)}}}const g={ordinalNumber:(b={matchPattern:/^(\d+)(th|st|nd|rd)?/i,parsePattern:/\d+/i,valueCallback:e=>parseInt(e,10)},(e,n={})=>{const t=e.match(b.matchPattern);if(!t)return null;const a=t[0],o=e.match(b.parsePattern);if(!o)return null;let r=b.valueCallback?b.valueCallback(o[0]):o[0];return r=n.valueCallback?n.valueCallback(r):r,{value:r,rest:e.slice(a.length)}}),era:C({matchPatterns:{narrow:/^(b|a)/i,abbreviated:/^(b\.?\s?c\.?|b\.?\s?c\.?\s?e\.?|a\.?\s?d\.?|c\.?\s?e\.?)/i,wide:/^(before christ|before common era|anno domini|common era)/i},defaultMatchWidth:"wide",parsePatterns:{any:[/^b/i,/^(a|c)/i]},defaultParseWidth:"any"}),quarter:C({matchPatterns:{narrow:/^[1234]/i,abbreviated:/^q[1234]/i,wide:/^[1234](th|st|nd|rd)? quarter/i},defaultMatchWidth:"wide",parsePatterns:{any:[/1/i,/2/i,/3/i,/4/i]},defaultParseWidth:"any",valueCallback:e=>e+1}),month:C({matchPatterns:{narrow:/^[jfmasond]/i,abbreviated:/^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,wide:/^(january|february|march|april|may|june|july|august|september|october|november|december)/i},defaultMatchWidth:"wide",parsePatterns:{narrow:[/^j/i,/^f/i,/^m/i,/^a/i,/^m/i,/^j/i,/^j/i,/^a/i,/^s/i,/^o/i,/^n/i,/^d/i],any:[/^ja/i,/^f/i,/^mar/i,/^ap/i,/^may/i,/^jun/i,/^jul/i,/^au/i,/^s/i,/^o/i,/^n/i,/^d/i]},defaultParseWidth:"any"}),day:C({matchPatterns:{narrow:/^[smtwf]/i,short:/^(su|mo|tu|we|th|fr|sa)/i,abbreviated:/^(sun|mon|tue|wed|thu|fri|sat)/i,wide:/^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i},defaultMatchWidth:"wide",parsePatterns:{narrow:[/^s/i,/^m/i,/^t/i,/^w/i,/^t/i,/^f/i,/^s/i],any:[/^su/i,/^m/i,/^tu/i,/^w/i,/^th/i,/^f/i,/^sa/i]},defaultParseWidth:"any"}),dayPeriod:C({matchPatterns:{narrow:/^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,any:/^([ap]\.?\s?m\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i},defaultMatchWidth:"any",parsePatterns:{any:{am:/^a/i,pm:/^p/i,midnight:/^mi/i,noon:/^no/i,morning:/morning/i,afternoon:/afternoon/i,evening:/evening/i,night:/night/i}},defaultParseWidth:"any"})};var b;const v={code:"en-US",formatDistance:(e,n,t)=>{let a;const o=A[e];return a="string"==typeof o?o:1===n?o.one:o.other.replace("{{count}}",n.toString()),t?.addSuffix?t.comparison&&t.comparison>0?"in "+a:a+" ago":a},formatLong:u,formatRelative:(e,n,t,a)=>p[e],localize:f,match:g,options:{weekStartsOn:0,firstWeekContainsDate:1}};let y={};function I(){return y}function B(e){const n=Object.prototype.toString.call(e);return e instanceof Date||"object"==typeof e&&"[object Date]"===n?new e.constructor(+e):"number"==typeof e||"[object Number]"===n||"string"==typeof e||"[object String]"===n?new Date(e):new Date(NaN)}function E(e){const n=B(e),t=new Date(Date.UTC(n.getFullYear(),n.getMonth(),n.getDate(),n.getHours(),n.getMinutes(),n.getSeconds(),n.getMilliseconds()));return t.setUTCFullYear(n.getFullYear()),+e-+t}Math.pow(10,8);const x=6e4,w=525600,k=43200,j=1440;function L(e,n,t){const a=I(),o=t?.locale??a.locale??v,r=function(e,n){const t=B(e),a=B(n),o=t.getTime()-a.getTime();return o<0?-1:o>0?1:o}(e,n);if(isNaN(r))throw new RangeError("Invalid time value");const i=Object.assign({},t,{addSuffix:t?.addSuffix,comparison:r});let d,s;r>0?(d=B(n),s=B(e)):(d=B(e),s=B(n));const c=(l=t?.roundingMethod??"round",e=>{const n=(l?Math[l]:Math.trunc)(e);return 0===n?0:n});var l;const A=s.getTime()-d.getTime(),m=A/x,u=(A-(E(s)-E(d)))/x,p=t?.unit;let h;if(h=p||(m<1?"second":m<60?"minute":m<j?"hour":u<k?"day":u<w?"month":"year"),"second"===h){const e=c(A/1e3);return o.formatDistance("xSeconds",e,i)}if("minute"===h){const e=c(m);return o.formatDistance("xMinutes",e,i)}if("hour"===h){const e=c(m/60);return o.formatDistance("xHours",e,i)}if("day"===h){const e=c(u/j);return o.formatDistance("xDays",e,i)}if("month"===h){const e=c(u/k);return 12===e&&"month"!==p?o.formatDistance("xYears",1,i):o.formatDistance("xMonths",e,i)}{const e=c(u/w);return o.formatDistance("xYears",e,i)}}function S(e){const n=document.querySelector("body"),t=document.createElement("div");t.classList.add("content");const a=document.createElement("divs");a.classList.add("content-header");const o=document.createElement("button");o.classList.add("header-button");const A=document.createElement("span");A.classList.add("header-text"),A.textContent="My Projects",o.addEventListener("click",M),o.appendChild(A),a.appendChild(o);const m=document.createElement("div");m.classList.add("project-title");const u=document.createElement("h1"),p=r.projects.filter((n=>n.name===e)),h=r.projects.findIndex((n=>n.name===e));u.textContent=e,m.appendChild(u);const f=document.createElement("div");f.classList.add("task-container"),p.forEach((n=>{n.tasks.forEach((n=>{console.log(n);const a=document.createElement("div");a.classList.add("tasks"),a.classList.add(n.priority);const o=document.createElement("div");o.classList.add("checkbox-div");const l=document.createElement("input");l.setAttribute("type","checkbox"),o.appendChild(l),l.addEventListener("change",(function(){n.changeIsComplete(),!0===n.isComplete?(A.classList.add("checked"),console.log("Checkbox is checked.."),A.classList.remove("unchecked")):(A.classList.add("unchecked"),console.log("Checkbox is not checked.."),A.classList.remove("checked"))}));const A=document.createElement("div");A.classList.add("task-content");const m=document.createElement("h3");m.classList.add("task-title"),m.textContent=n.title;const u=document.createElement("span");u.classList.add("due-date");const p=L(new Date,n.dueDate,{unit:"day"});let C;C="0 days"===p?"Due in : Today":`Due in : ${p}`,u.textContent=C,console.log(p);const g=document.createElement("div");g.classList.add("description");const b=document.createElement("p");b.classList.add("desc-text"),b.textContent=n.desc,g.appendChild(b);const v=document.createElement("div");v.classList.add("btn-div");const y=document.createElement("button");y.classList.add("drop");const I=new Image;I.src=d,y.appendChild(I);const B=document.createElement("button");B.classList.add("edit-btn");const E=new Image;E.src=i,B.appendChild(E);const x=document.createElement("button");x.classList.add("delete-btn");const w=new Image;w.src=s,x.appendChild(w),v.appendChild(B),v.appendChild(x),v.appendChild(y),B.addEventListener("click",(function(){!function(e,n){const t=document.querySelector("body"),a=document.createElement("dialog");a.classList.add("edit-modal");const o=document.createElement("h1");o.classList.add("edit"),o.textContent="Edit task",a.appendChild(o);const i=document.createElement("form");i.classList.add("modal-form");const d=r.projects.findIndex((e=>e.name===n)),s=r.projects[d].tasks.findIndex((n=>n.title===e.title));console.log(r.projects[d].tasks.findIndex((n=>n.title===e.title))),console.log(r.projects.findIndex((e=>e.name===n))),console.log(e);const l=document.createElement("div");l.classList.add("input-control");const A=document.createElement("input");A.type="text",A.name="taskName",A.value=e.title,A.required=!0;const m=document.createElement("div");m.classList.add("error"),l.appendChild(A),l.appendChild(m);const u=document.createElement("div");u.classList.add("input-control");const p=document.createElement("textarea");p.cols="40",p.rows="5",p.name="taskDescription",p.value=e.desc,p.required=!0;const h=document.createElement("div");h.classList.add("error"),u.appendChild(p),u.appendChild(h);const f=document.createElement("div");f.classList.add("input-control");const C=document.createElement("input");C.type="date",C.name="dueDate",C.value=e.dueDate,C.required=!0;const g=document.createElement("div");g.classList.add("error"),f.appendChild(C),f.appendChild(g);const b=document.createElement("div"),v=document.createElement("select");v.classList.add("priority"),["Low","Medium","High"].forEach((function(e){const n=document.createElement("option");n.textContent=e,n.value=e.toLowerCase().replace(/\s/g,"-"),v.appendChild(n)})),b.appendChild(v);const y=document.createElement("div");y.classList.add("button-div");const I=document.createElement("button");I.type="submit",I.value="Submit",I.textContent="Save";const B=document.createElement("button");B.value="Cancel",B.textContent="Cancel",i.addEventListener("submit",(e=>{e.preventDefault(),r.projects[d].tasks[s].changeTitle(i.taskName.value),r.projects[d].tasks[s].changeDesc(i.taskDescription.value);let t=v.options[v.selectedIndex];r.projects[d].tasks[s].changePriority(t.value),r.projects[d].tasks[s].changeDueDate(i.dueDate.value),console.log(typeof C),console.log(r.projects[d].tasks[s]),a.close(),a.remove();const o=document.querySelector(".content");null!==o&&o.remove(),c(r),S(n)})),B.addEventListener("click",(()=>{event.preventDefault(),a.close(),a.remove()})),y.appendChild(I),y.appendChild(B),i.appendChild(l),i.appendChild(u),i.appendChild(f),i.appendChild(b),i.appendChild(y),a.appendChild(i),t.appendChild(a),a.showModal()}(n,e)})),I.addEventListener("click",(()=>{g.classList.contains("drop-open")?g.classList.remove("drop-open"):g.classList.add("drop-open")})),x.addEventListener("click",(()=>{r.projects[h].delTodo(n.title),c(r),null!==t&&t.remove(),S(e)})),A.appendChild(m),A.appendChild(g),A.appendChild(u),A.appendChild(v),a.appendChild(o),a.appendChild(A),f.appendChild(a)}))}));const C=document.createElement("button");C.classList.add("add-button");const g=new Image;g.src=l,C.appendChild(g);const b=document.createElement("span");b.textContent="Add task",C.appendChild(b),C.addEventListener("click",(()=>{!function(e){const n=document.querySelector(".task-container"),t=document.createElement("form");t.classList.add("add-form");const a=document.createElement("div");a.classList.add("input-container");const o=document.createElement("input");o.type="text",o.name="taskName",o.placeholder="Task title",o.required=!0,a.appendChild(o);const i=document.createElement("div"),d=document.createElement("textarea");d.placeholder="Task description",d.cols="50",d.rows="4",i.appendChild(d);const s=document.createElement("div"),l=document.createElement("input");l.type="date",l.name="duedate",l.required=!0,s.appendChild(l);const A=document.createElement("div"),m=document.createElement("select");["Low","Medium","High"].forEach((function(e){const n=document.createElement("option");n.textContent=e,n.value=e.toLowerCase().replace(/\s/g,"-"),m.appendChild(n)})),A.appendChild(m);const u=document.createElement("div");u.classList.add("button-div");const p=document.createElement("button");p.type="submit",p.value="Submit",p.textContent="Add";const h=document.createElement("button");h.value="cancel",h.textContent="Cancel",u.appendChild(h),u.appendChild(p),t.appendChild(a),t.appendChild(i),t.appendChild(s),t.appendChild(A),t.appendChild(u),n.appendChild(t),t.addEventListener("submit",(n=>{n.preventDefault(),r.projects[e].newTodo(o.value,d.value,l.value,m.value),c(r);const t=document.querySelector(".content");null!==t&&t.remove(),S(r.projects[e].getProjName)})),h.addEventListener("click",(()=>{t.remove()}))}(h)})),f.appendChild(C),t.appendChild(a),t.appendChild(m),t.appendChild(f),n.appendChild(t)}function M(){const e=document.querySelector("body"),n=document.createElement("div");n.classList.add("content");const t=document.querySelector(".content");null!==t&&t.remove();const a=document.createElement("h1");a.classList.add("welcome"),a.textContent="Welcome to Tododo";const o=document.createElement("div");o.classList.add("home");const i=document.createElement("div");i.classList.add("content-header");const d=document.createElement("h1");d.textContent="My Projects",i.appendChild(d);const s=document.createElement("div");s.classList.add("content-body"),r.getProjects.forEach((e=>{const n=document.createElement("div");n.classList.add("content-item");const t=document.createElement("h3");t.classList.add("name"),t.textContent=e.getProjName,n.appendChild(t),s.appendChild(n),n.addEventListener("click",(function(){const e=document.querySelector(".content");null!==e&&e.remove(),S(t.textContent)}))})),o.appendChild(i),o.appendChild(s),n.appendChild(a),n.appendChild(o),e.appendChild(n)}const D=t.p+"50ad363ee2c819f382d2.svg";var W=t(72),P=t.n(W),T=t(825),q=t.n(T),Y=t(659),N=t.n(Y),U=t(56),X=t.n(U),O=t(540),z=t.n(O),F=t(113),J=t.n(F),V=t(365),Q={};Q.styleTagTransform=J(),Q.setAttributes=X(),Q.insert=N().bind(null,"head"),Q.domAPI=q(),Q.insertStyleElement=z(),P()(V.A,Q),V.A&&V.A.locals&&V.A.locals,function e(){const n=document.querySelector(".content");null!==n&&n.remove();const t=document.querySelector("body"),a=document.createElement("div");a.classList.add("side-bar");const o=document.createElement("div");o.classList.add("profile");const i=document.createElement("p");i.textContent="Tododo",i.classList.add("profile-name"),i.addEventListener("click",M),o.appendChild(i);const d=document.createElement("div");d.classList.add("project-list");const l=document.createElement("div");l.classList.add("project-list-header");const A=document.createElement("h3");A.textContent="My Projects",A.classList.add("project-list-title");const m=new Image;m.src=D,l.appendChild(A),l.appendChild(m),m.addEventListener("click",(()=>{!function(n){const t=document.querySelector("body"),a=document.createElement("dialog"),o=document.createElement("div"),i=document.createElement("h1");i.classList.add("title"),i.textContent="Add Project",o.classList.add("title-div"),o.appendChild(i),a.appendChild(o);const d=document.createElement("form"),s=document.createElement("div"),l=document.createElement("input");l.required="true",l.type="text",l.name="projName",l.placeholder="Project Name",s.appendChild(l);const A=document.createElement("div"),m=document.createElement("button");m.value="Cancel",m.textContent="Cancel";const u=document.createElement("button");u.value="Submit",u.textContent="Add",A.appendChild(m),A.appendChild(u),d.appendChild(s),d.appendChild(A),d.addEventListener("submit",(t=>{t.preventDefault(),r.newProject(l.value),c(r),e(),M(),null!==n&&n.remove(),a.close(),a.remove()})),m.addEventListener("click",(()=>{a.close(),a.remove()})),a.appendChild(d),t.appendChild(a),a.showModal()}(a)}));const u=document.createElement("div");u.classList.add("projects"),c(r);let p=JSON.parse(localStorage.getItem("myObj"));console.log(p),0===r.projects.length&&function(e){e.forEach((e=>{r.newProject(e.name),console.log(e.tasks);const n=r.projects.findIndex((n=>n.name===e.name));console.log(n),e.tasks.forEach((e=>{console.log(r.projects[n].newTodo(e.title,e.desc,e.dueDate,e.priority,e.isComplete))}))}))}(p.projects),console.log(r);let h=r.getProjects;console.log(h),h.forEach((n=>{const t=document.createElement("div");t.classList.add("project-item");const o=document.createElement("button");o.classList.add("project-button");const i=document.createElement("p");i.classList.add("project-name"),i.textContent=n.getProjName,o.addEventListener("click",(function(){const e=document.querySelector(".content");null!==e&&e.remove(),S(i.textContent)}));const d=document.createElement("button");d.classList.add("delete-btn");const l=new Image;l.src=s,d.appendChild(l),d.addEventListener("click",(()=>{var n,t;n=i.textContent,t=a,r.deleteProject(n),c(r),null!==t&&t.remove(),e()})),o.appendChild(i),t.appendChild(o),t.appendChild(d),u.appendChild(t)})),d.appendChild(l),d.appendChild(u),a.appendChild(o),a.appendChild(d),t.appendChild(a)}(),M()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,